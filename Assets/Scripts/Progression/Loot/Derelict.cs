using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using SharedState;
using System;
using System.ComponentModel;

namespace ProgressionV2
{
    public class Derelict : Interactable
    {
        public GameState gameState;

        [HideInInspector][SerializeField] private string uniqueId;
        public string UniqueId => uniqueId;

#if UNITY_EDITOR
        protected virtual void OnValidate()
        {
            // Only generate once
            if (string.IsNullOrEmpty(uniqueId))
            {
                uniqueId = Guid.NewGuid().ToString();
                UnityEditor.EditorUtility.SetDirty(this);
            }
        }
#endif

        [System.Serializable]
        public class DerelictSettings
        {
            public int maxLoot = 3;
            public int maxPointBudget = 100;
            public float biasMeanPoint = 1.0f;
            public float biasSigma = 1.0f;
            public float biasStrength = 1.0f;
        }
        public DerelictSettings lootSettings = new DerelictSettings();

        protected virtual void Awake()
        {
            if (string.IsNullOrEmpty(uniqueId))
                uniqueId = Guid.NewGuid().ToString();
        }

        public override void OnInteractedWith()
        {
            // First check if there are items already generated by this derelict
            if (!DerelictData.LootForDerelictGenerated(uniqueId))
            {
                // if not, we generate new loot.
                DerelictData.GenerateNewLoot(
                    uniqueId,
                    lootSettings.maxLoot,
                    lootSettings.maxPointBudget,
                    lootSettings.biasMeanPoint,
                    lootSettings.biasSigma,
                    lootSettings.biasStrength
                    );
            }
            DerelictData.activeDerelict = uniqueId;
            gameState.Requests.EnterDerelict();
        }
    }
}
